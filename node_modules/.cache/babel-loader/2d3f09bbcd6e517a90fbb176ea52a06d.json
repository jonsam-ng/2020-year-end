{"ast":null,"code":"var _jsxFileName = \"/Users/jonsam/Projects/update_in_github/2020-year-end/src/store/index.tsx\";\nimport React, { useContext, createContext, useReducer } from \"react\";\nimport reducer from \"./reducer\";\nimport initState from \"./store\";\nimport actionType from \"./action\";\nexport const storeContext = createContext({});\n\nconst ContextProvider = props => {\n  const [state, dispatch] = useReducer(reducer, initState);\n  return /*#__PURE__*/React.createElement(storeContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport const useStore = () => useContext(storeContext);\nexport { actionType };\nexport default ContextProvider;","map":{"version":3,"sources":["/Users/jonsam/Projects/update_in_github/2020-year-end/src/store/index.tsx"],"names":["React","useContext","createContext","useReducer","reducer","initState","actionType","storeContext","ContextProvider","props","state","dispatch","children","useStore"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,EAA2CC,UAA3C,QAAiE,OAAjE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,SAAtB;AAEA,OAAOC,UAAP,MAAuB,UAAvB;AAEA,OAAO,MAAMC,YAA0C,GAAGL,aAAa,CACrE,EADqE,CAAhE;;AAIP,MAAMM,eAAmB,GAAIC,KAAD,IAAgB;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,UAAU,CAACC,OAAD,EAAUC,SAAV,CAApC;AAEA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,QADT,CADF;AAKD,CARD;;AAUA,OAAO,MAAMC,QAAQ,GAAG,MAAMZ,UAAU,CAACM,YAAD,CAAjC;AACP,SAASD,UAAT;AACA,eAAeE,eAAf","sourcesContent":["import React, { useContext, createContext, useReducer, FC } from \"react\";\nimport reducer from \"./reducer\";\nimport initState from \"./store\";\nimport { IContextProps } from \"./interface\";\nimport actionType from \"./action\";\n\nexport const storeContext: React.Context<IContextProps> = createContext(\n  {} as IContextProps\n);\n\nconst ContextProvider: FC = (props: any) => {\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  return (\n    <storeContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </storeContext.Provider>\n  );\n};\n\nexport const useStore = () => useContext(storeContext);\nexport { actionType };\nexport default ContextProvider;\n"]},"metadata":{},"sourceType":"module"}